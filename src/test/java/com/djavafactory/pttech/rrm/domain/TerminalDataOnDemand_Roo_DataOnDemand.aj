// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.djavafactory.pttech.rrm.domain;

import com.djavafactory.pttech.rrm.domain.Terminal;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect TerminalDataOnDemand_Roo_DataOnDemand {
    
    declare @type: TerminalDataOnDemand: @Component;
    
    private Random TerminalDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Terminal> TerminalDataOnDemand.data;
    
    public void TerminalDataOnDemand.setTerminalId(Terminal obj, int index) {
        java.lang.String terminalId = "terminalId_" + index;
        obj.setTerminalId(terminalId);
    }
    
    public void TerminalDataOnDemand.setIp(Terminal obj, int index) {
        java.lang.String ip = "ip_" + index;
        obj.setIp(ip);
    }
    
    public void TerminalDataOnDemand.setPort(Terminal obj, int index) {
        java.lang.String port = "port_" + index;
        obj.setPort(port);
    }
    
    public void TerminalDataOnDemand.setDescription(Terminal obj, int index) {
        java.lang.String description = "description_" + index;
        obj.setDescription(description);
    }
    
    public void TerminalDataOnDemand.setAcquirerState(Terminal obj, int index) {
        com.djavafactory.pttech.rrm.domain.Province acquirerState = null;
        obj.setAcquirerState(acquirerState);
    }
    
    public void TerminalDataOnDemand.setCity(Terminal obj, int index) {
        java.lang.Long city = new Integer(index).longValue();
        obj.setCity(city);
    }
    
    public void TerminalDataOnDemand.setLocation(Terminal obj, int index) {
        java.lang.String location = "location_" + index;
        obj.setLocation(location);
    }
    
    public void TerminalDataOnDemand.setStatus(Terminal obj, int index) {
        java.lang.String status = "status_" + index;
        obj.setStatus(status);
    }
    
    public void TerminalDataOnDemand.setCreatedTime(Terminal obj, int index) {
        java.util.Date createdTime = new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setCreatedTime(createdTime);
    }
    
    public void TerminalDataOnDemand.setModifiedTime(Terminal obj, int index) {
        java.util.Date modifiedTime = new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setModifiedTime(modifiedTime);
    }
    
    public void TerminalDataOnDemand.setCreatedBy(Terminal obj, int index) {
        java.lang.String createdBy = "createdBy_" + index;
        obj.setCreatedBy(createdBy);
    }
    
    public void TerminalDataOnDemand.setModifiedBy(Terminal obj, int index) {
        java.lang.String modifiedBy = "modifiedBy_" + index;
        obj.setModifiedBy(modifiedBy);
    }
    
    public void TerminalDataOnDemand.setAcquirer(Terminal obj, int index) {
        com.djavafactory.pttech.rrm.domain.Acquirer acquirer = null;
        obj.setAcquirer(acquirer);
    }
    
    public void TerminalDataOnDemand.setTerminalType(Terminal obj, int index) {
        com.djavafactory.pttech.rrm.domain.TerminalType terminalType = null;
        obj.setTerminalType(terminalType);
    }
    
    public Terminal TerminalDataOnDemand.getSpecificTerminal(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Terminal obj = data.get(index);
        return Terminal.findTerminal(obj.getId());
    }
    
    public Terminal TerminalDataOnDemand.getRandomTerminal() {
        init();
        Terminal obj = data.get(rnd.nextInt(data.size()));
        return Terminal.findTerminal(obj.getId());
    }
    
    public boolean TerminalDataOnDemand.modifyTerminal(Terminal obj) {
        return false;
    }
    
    public void TerminalDataOnDemand.init() {
        data = com.djavafactory.pttech.rrm.domain.Terminal.findTerminalEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Terminal' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.djavafactory.pttech.rrm.domain.Terminal>();
        for (int i = 0; i < 10; i++) {
            com.djavafactory.pttech.rrm.domain.Terminal obj = getNewTransientTerminal(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
