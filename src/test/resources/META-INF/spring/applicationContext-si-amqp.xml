<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:amqp="http://www.springframework.org/schema/integration/amqp"
             xmlns:util="http://www.springframework.org/schema/util"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
							http://www.springframework.org/schema/integration
			                http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
                            http://www.springframework.org/schema/integration/amqp
                            http://www.springframework.org/schema/integration/amqp/spring-integration-amqp-2.0.xsd
                            http://www.springframework.org/schema/util
                            http://www.springframework.org/schema/util/spring-util-3.0.xsd">


    <util:properties id="amqp" location="classpath:/META-INF/spring/amqp.properties"/>

    <amqp:inbound-channel-adapter channel="rrmReloadReqInboundChannel"
                                  queue-name="#{amqp['queue.rrm.reload.req']}"
                                  connection-factory="singleConnectionFactory"/>


    <channel id="rmiReloadStatusChannel">
        <interceptors>
            <wire-tap channel="logger"/>
        </interceptors>
    </channel>
    <amqp:outbound-channel-adapter channel="rmiReloadStatusChannel" routing-key="#{amqp['queue.rmi.reload.status']}"
                                   amqp-template="rabbitTemplate"/>

    <channel id="rmiReloadRequestChannel">
        <interceptors>
            <wire-tap channel="logger"/>
        </interceptors>
    </channel>
    <amqp:outbound-channel-adapter channel="rmiReloadRequestChannel" routing-key="#{amqp['queue.rmi.reload.req']}"
                                   amqp-template="rabbitTemplate"/>

    <channel id="rtmReloadInboundChannel">
        <interceptors>
            <wire-tap channel="logger"/>
        </interceptors>
    </channel>
    <amqp:outbound-channel-adapter channel="rtmReloadInboundChannel" routing-key="#{amqp['queue.rtm.reload.req']}"
                                   amqp-template="rabbitTemplate"/>

    <channel id="rtmReloadStatusChannel">
        <interceptors>
            <wire-tap channel="logger"/>
        </interceptors>
    </channel>
    <amqp:outbound-channel-adapter channel="rtmReloadStatusChannel" routing-key="#{amqp['queue.rtm.reload.status']}"
                                   amqp-template="rabbitTemplate"/>

    <channel id="tngReloadReqChannel">
        <interceptors>
            <wire-tap channel="logger"/>
        </interceptors>
    </channel>
    <amqp:outbound-channel-adapter channel="tngReloadReqChannel" routing-key="#{amqp['queue.tng.reload.req']}"
                                   amqp-template="rabbitTemplate"/>

    <channel id="tngReloadStatusChannel">
        <interceptors>
            <wire-tap channel="logger"/>
        </interceptors>
    </channel>
    <amqp:outbound-channel-adapter channel="tngReloadStatusChannel" routing-key="#{amqp['queue.tng.reload.status']}"
                                   amqp-template="rabbitTemplate"/>

    <logging-channel-adapter id="logger" expression="'[Sending message to queue] >> '.concat(payload)"/>
</beans:beans>