<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
							http://www.springframework.org/schema/integration
			                http://www.springframework.org/schema/integration/spring-integration-2.0.xsd">

    <service-activator input-channel="rrmReloadReqInboundChannel"
                       ref="messageHandler" method="reloadRequestHandler" output-channel="rrmReloadReqOutputChannel"/>

    <channel id="rrmReloadReqOutputChannel"/>
    <chain input-channel="rrmReloadReqOutputChannel" output-channel="routeMessageChannel">
        <transformer ref="transformerBean" method="transformReloadRequest"/>
        <filter ref="filterBean" method="reloadRequestFilter" discard-channel="invalidMessagesChannel"/>
    </chain>

    <channel id="invalidMessagesChannel">
        <queue capacity="100"/>
    </channel>
    <transformer input-channel="invalidMessagesChannel" ref="transformerBean" method="transformMessageToResponse"
                 output-channel="rmiReloadStatusChannel"/>

    <channel id="routeMessageChannel">
        <queue capacity="100"/>
    </channel>
    <router input-channel="routeMessageChannel" ref="routerBean" method="routeReloadRequest"/>

    <channel id="newReloadReqPersistChannel">
        <queue capacity="100"/>
    </channel>
    <chain input-channel="newReloadReqPersistChannel" output-channel="tngReloadRequestChannel">
        <transformer ref="mapperBean" method="mapNewReloadRequest"/>
        <service-activator ref="messagePersistenceBean" method="mergeReloadRequest"/>
    </chain>

    <channel id="rtmReloadReqPersistChannel">
        <queue capacity="100"/>
    </channel>
    <chain input-channel="rtmReloadReqPersistChannel" output-channel="rtmRequestResponseChannel">
        <transformer ref="mapperBean" method="mapRtmReloadRequest"/>
        <service-activator ref="messagePersistenceBean" method="mergeReloadRequest"/>
    </chain>

    <channel id="tngReloadRequestChannel">
        <queue capacity="100"/>
    </channel>
    <transformer input-channel="tngReloadRequestChannel" ref="transformerBean" method="transformMessageToReloadReq"
                 output-channel="tngRequestWsChannel"/>

    <channel id="rtmReloadRequestChannel">
        <queue capacity="100"/>
    </channel>
    <transformer input-channel="rtmReloadRequestChannel" ref="transformerBean" method="transformMessageToJson"
                 output-channel="rtmReloadInboundChannel"/>

    <publish-subscribe-channel id="rtmRequestResponseChannel"/>
    <transformer input-channel="rtmRequestResponseChannel" ref="transformerBean" method="transformMessageToJson"
                 output-channel="rmiReloadRequestChannel"/>
    <transformer input-channel="rtmRequestResponseChannel" ref="transformerBean" method="transformMessageToResponse"
                 output-channel="rtmReloadStatusChannel"/>

    <poller id="defaultPoller" default="true" fixed-rate="3000"/>

    <logging-channel-adapter id="defLogger" expression="'[Sending message to channel] >> '.concat(payload)"/>
</beans:beans>