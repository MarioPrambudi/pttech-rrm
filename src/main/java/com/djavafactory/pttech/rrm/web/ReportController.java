package com.djavafactory.pttech.rrm.web;

import java.util.List;

import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;

import com.djavafactory.pttech.rrm.domain.Configuration;
import com.djavafactory.pttech.rrm.domain.ReloadRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;


/**
 * This class is generated by <b>jasperoo setup</b>.
 * Request mapping methods are added by <b>jasperoo add</b> or <b>jasperoo all</b>.
 * 
 * <b>ANYTHING ADDED AFTER THE CLOSING BRACE WILL BE DELETED BY <u>jasperoo add</u>!</b>
 */
@RequestMapping("/reports")
@Controller
public class ReportController {

	public static final String REPORT_TYPE_CELCOM = "celcom";
    public static final String REPORT_TYPE_TNG = "tng";

    @RequestMapping(method = RequestMethod.GET)
    public String getReportList(@RequestParam(value = "type") String type, Model uiModel) {
        List<Configuration> configList = Configuration.findByConfigKeyPrefix(type);
        if (configList != null && !configList.isEmpty()) {
            for (int i = 0; i < configList.size(); i++) {
                Configuration config = configList.get(i);
                if (config.getConfigKey().lastIndexOf(".") > -1) {
                    config.setConfigKey(config.getConfigKey().substring(config.getConfigKey().lastIndexOf(".") + 1));
                }
            }
        }
        uiModel.addAttribute("reports", configList);
        return "reports/reportList";
    }
    
/*
 * The template for the "List" Request mapping methods is: 
 *
 *	@RequestMapping(value ="/**ENTITY_NAME_LOWER**List/{format}", method = RequestMethod.GET)
 *	public String report**ENTITY_NAME**List(ModelMap modelMap, @PathVariable("format") String format) {
 *		JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(**ENTITY_NAME**.findAll**REPORT_TITLE**(),false);
 *		modelMap.put("reportData", jrDataSource);
 *		modelMap.put("format", format);
 *		return "**ENTITY_NAME_LOWER**ReportList";
 *	}
 */

	@RequestMapping(value ="/reloadrequestList/{format}", method = RequestMethod.GET)
	public String reportReloadRequestList(ModelMap modelMap, @PathVariable("format") String format) {
		JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests(),false);
		modelMap.put("reportData", jrDataSource);
		modelMap.put("format", format);
		return "reloadrequestReportList";
	}

//	@RequestMapping(value ="/reloadrequestDetail/{id}/{format}", method = RequestMethod.GET)
//	public String reportReloadRequestDetail(ModelMap modelMap, @PathVariable("id") Long id, @PathVariable("format") String format) {
//		JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(com.djavafactory.pttech.rrm.domain.ReloadRequest.findReloadRequestsById(id).getResultList(),false);
//		modelMap.put("reportData", jrDataSource);
//		modelMap.put("format", format);
//		return "reloadrequestReportDetail";
//	}

	/*
	 * TnG Report
	 */
	@RequestMapping(value ="/171-Report/{format}", method = RequestMethod.GET)
	public String dailyDetailsRequestReloadFfmCelcomReport(ModelMap modelMap,
														   Model uiModel,
														   @PathVariable("format") String format) {
	
		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "dailyDetailsRequestReloadFrmCelcomList";
		} else {
			JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList,false);
			modelMap.put("reportData", jrDataSource);
			modelMap.put("format", format);
			
			return "dailyDetailsRequestReloadFrmCelcomReport";
		}
		
	}
	
	@RequestMapping(value = "/172-Report/{format}", method = RequestMethod.GET)
	public String summaryRequestReloadFrmCelcomReport(ModelMap modelMap,
													  Model uiModel,
													  @PathVariable("format") String format) {
		
		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "summaryRequestReloadFrmCelcomList";
		} else {
	        JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList ,false);
	        modelMap.put("reportData", jrDataSource);
	        modelMap.put("format", format);
	        return "summaryRequestReloadFrmCelcomReport";
		}
	}
	
	@RequestMapping(value = "/173-Report/{format}", method = RequestMethod.GET)
	public String dailyDetailedReloadFrmCelcomReport(ModelMap modelMap,
												     Model uiModel,
													 @PathVariable("format") String format) {
		
		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "dailyDetailedReloadFrmCelcomList";
		} else {
			JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList ,false);
			modelMap.put("reportData", jrDataSource);
			modelMap.put("format", format);
			return "dailyDetailedReloadFrmCelcomReport";
		}
	}
	
	@RequestMapping(value = "/174-Report/{format}", method = RequestMethod.GET)
	public String summaryReloadFrmCelcomReport(ModelMap modelMap, 
											   Model uiModel,
											   @PathVariable("format") String format) {
		
		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "summaryReloadFrmCelcomList";
		} else {
			JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList ,false);
			modelMap.put("reportData", jrDataSource);
			modelMap.put("format", format);
			return "summaryReloadFrmCelcomReport";
		}
	}
	
	@RequestMapping(value = "/175-Report/{format}", method = RequestMethod.GET)
	public String dailyDetailsCancellationReloadReqFrmCelcomReport(ModelMap modelMap,
																   Model uiModel,
																   @PathVariable("format") String format) {
		
		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "dailyDetailsCancellationReloadReqFrmCelcomList";
		} else {
			JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList ,false);
			modelMap.put("reportData", jrDataSource);
			modelMap.put("format", format);
			return "dailyDetailsCancellationReloadReqFrmCelcomReport";
		}
	}
	
	@RequestMapping(value = "/176-Report/{format}", method = RequestMethod.GET)
	public String summaryCancellationReloadFrmCelcomReport(ModelMap modelMap,
														   Model uiModel,
														   @PathVariable("format") String format) {
		
		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "summaryCancellationReloadFrmCelcomList";
		} else {
			JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList ,false);
			modelMap.put("reportData", jrDataSource);
			modelMap.put("format", format);
			return "summaryCancellationReloadFrmCelcomReport";
		}
	}
	
	@RequestMapping(value ="/177-Report/{format}", method = RequestMethod.GET)
	public String dailySettlementReloadFrmCelcomReport(ModelMap modelMap,
													   Model uiModel,
													   @PathVariable("format") String format) {
		
		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "dailySettlementReloadFrmCelcomList";
		} else {
			JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList ,false);
			modelMap.put("reportData", jrDataSource);
			modelMap.put("format", format);
			return "dailySettlementReloadFrmCelcomReport";
		}
	}
	
	
	@RequestMapping(value = "/178-Report/{format}", method = RequestMethod.GET)
	public String monthlySettlementReloadFrmCelcomReport(ModelMap modelMap,
														 Model uiModel,
														 @PathVariable("format") String format) {
		
		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "monthlySettlementReloadFrmCelcomList";
		} else {
			JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList ,false);
			modelMap.put("reportData", jrDataSource);
			modelMap.put("format", format);
			return "monthlySettlementReloadFrmCelcomReport";
		}
	}
	
	/*
	 * Celcom Report
	 */
	@RequestMapping(value = "/179-Report/{format}", method = RequestMethod.GET)
	public String dailyTrxDetailsReport(ModelMap modelMap,
										Model uiModel,
										@PathVariable("format") String format) {

		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "dailyTrxDetailsList";
		} else {
			JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList ,false);
			modelMap.put("reportData", jrDataSource);
			modelMap.put("format", format);
			return "dailyTrxDetailsReport";
		}
	}
	
	@RequestMapping(value = "/180-Report/{format}", method = RequestMethod.GET)
	public String dailyTrxDetailsByRangeDateReport(ModelMap modelMap, Model uiModel,
												   @PathVariable("format") String format,
												   @RequestParam(value = "startDate", required = false) String startDate,
												   @RequestParam(value = "endDate", required = false) String endDate) {

		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "dailyTrxDetailsByRangeDateList";
		} else {		
			JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList ,false);
			modelMap.put("reportData", jrDataSource);
			modelMap.put("format", format);
			return "dailyTrxDetailsByRangeDateReport";
		}
	}
	
	@RequestMapping(value = "/181-Report/{format}", method = RequestMethod.GET)
	public String dailyTrxFeeDetailsReport(ModelMap modelMap, Model uiModel,
										   @PathVariable("format") String format) {

		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "dailyTrxFeeDetailsList";
		} else {		
			JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList ,false);
			modelMap.put("reportData", jrDataSource);
			modelMap.put("format", format);
			return "dailyTrxFeeDetailsReport";
		}
	}
	
	@RequestMapping(value = "/182-Report/{format}", method = RequestMethod.GET)
	public String dailyTrxFeeDetailsByRangeDateReport(ModelMap modelMap, Model uiModel,
			 										  @PathVariable("format") String format,
													   @RequestParam(value = "startDate", required = false) String startDate,
													   @RequestParam(value = "endDate", required = false) String endDate) {

		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "dailyTrxFeeDetailsByRangeDateList";
		} else {	
			JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList ,false);
			modelMap.put("reportData", jrDataSource);
			modelMap.put("format", format);
			return "dailyTrxFeeDetailsByRangeDateReport";
		}
	}
	
	@RequestMapping(value = "/183-Report/{format}", method = RequestMethod.GET)
	public String summaryDailyTrxReport(ModelMap modelMap, Model uiModel,
										@PathVariable("format") String format) {

		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "summaryDailyTrxList";
		} else {	
			JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList ,false);
			modelMap.put("reportData", jrDataSource);
			modelMap.put("format", format);
			return "summaryDailyTrxReport";
		}
	}
	
	@RequestMapping(value = "/184-Report/{format}", method = RequestMethod.GET)
	public String summaryDailyTrxByRangeDateReport(ModelMap modelMap, Model uiModel,
												   @PathVariable("format") String format,
												   @RequestParam(value = "startDate", required = false) String startDate,
												   @RequestParam(value = "endDate", required = false) String endDate) {

		List<ReloadRequest> reloadRequestList = com.djavafactory.pttech.rrm.domain.ReloadRequest.findAllReloadRequests();
		
		if(format.equalsIgnoreCase("html")) {
	        uiModel.addAttribute("reports", reloadRequestList);
			
	        return "summaryDailyTrxByRangeDateList";
		} else {	
			JRBeanCollectionDataSource jrDataSource = new JRBeanCollectionDataSource(reloadRequestList ,false);
			modelMap.put("reportData", jrDataSource);
			modelMap.put("format", format);
			return "summaryDailyTrxByRangeDateReport";
		}
	}
	

}
