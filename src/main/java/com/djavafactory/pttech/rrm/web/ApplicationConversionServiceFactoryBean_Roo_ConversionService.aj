// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.djavafactory.pttech.rrm.web;

import com.djavafactory.pttech.rrm.domain.Acquirer;
import com.djavafactory.pttech.rrm.domain.Configuration;
import com.djavafactory.pttech.rrm.domain.Firmware;
import com.djavafactory.pttech.rrm.domain.Param;
import com.djavafactory.pttech.rrm.domain.ReloadRequest;
import com.djavafactory.pttech.rrm.domain.Terminal;
import com.djavafactory.pttech.rrm.domain.TerminalType;
import java.lang.String;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    Converter<Acquirer, String> ApplicationConversionServiceFactoryBean.getAcquirerConverter() {
        return new Converter<Acquirer, String>() {
            public String convert(Acquirer acquirer) {
                return new StringBuilder().append(acquirer.getName()).append(" ").append(acquirer.getRegistrationNo()).append(" ").append(acquirer.getStreet1()).append(" ").append(acquirer.getStreet2()).toString();
            }
        };
    }
    
    org.springframework.core.convert.converter.Converter<Configuration, String> ApplicationConversionServiceFactoryBean.getConfigurationConverter() {
        return new org.springframework.core.convert.converter.Converter<Configuration, String>() {
            public String convert(Configuration configuration) {
                return new StringBuilder().append(configuration.getConfigKey()).append(" ").append(configuration.getConfigValue()).append(" ").append(configuration.getOrdering()).toString();
            }
        };
    }
    
    org.springframework.core.convert.converter.Converter<Firmware, String> ApplicationConversionServiceFactoryBean.getFirmwareConverter() {
        return new org.springframework.core.convert.converter.Converter<Firmware, String>() {
            public String convert(Firmware firmware) {
                return new StringBuilder().append(firmware.getName()).toString();
            }
        };
    }
    
    org.springframework.core.convert.converter.Converter<Param, String> ApplicationConversionServiceFactoryBean.getParamConverter() {
        return new org.springframework.core.convert.converter.Converter<Param, String>() {
            public String convert(Param param) {
                return new StringBuilder().append(param.getCreatedBy()).append(" ").append(param.getCreatedTime()).toString();
            }
        };
    }
    
    org.springframework.core.convert.converter.Converter<ReloadRequest, String> ApplicationConversionServiceFactoryBean.getReloadRequestConverter() {
        return new org.springframework.core.convert.converter.Converter<ReloadRequest, String>() {
            public String convert(ReloadRequest reloadrequest) {
                return new StringBuilder().append(reloadrequest.getTransId()).append(" ").append(reloadrequest.getStatus()).append(" ").append(reloadrequest.getMfgNumber()).append(" ").append(reloadrequest.getReloadAmount()).toString();
            }
        };
    }
    
    org.springframework.core.convert.converter.Converter<Terminal, String> ApplicationConversionServiceFactoryBean.getTerminalConverter() {
        return new org.springframework.core.convert.converter.Converter<Terminal, String>() {
            public String convert(Terminal terminal) {
                return new StringBuilder().append(terminal.getTerminalId()).append(" ").append(terminal.getStatus()).append(" ").append(terminal.getCreatedTime()).append(" ").append(terminal.getModifiedTime()).toString();
            }
        };
    }
    
    org.springframework.core.convert.converter.Converter<TerminalType, String> ApplicationConversionServiceFactoryBean.getTerminalTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<TerminalType, String>() {
            public String convert(TerminalType terminaltype) {
                return new StringBuilder().append(terminaltype.getName()).append(" ").append(terminaltype.getDescription()).toString();
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAcquirerConverter());
        registry.addConverter(getConfigurationConverter());
        registry.addConverter(getFirmwareConverter());
        registry.addConverter(getParamConverter());
        registry.addConverter(getReloadRequestConverter());
        registry.addConverter(getTerminalConverter());
        registry.addConverter(getTerminalTypeConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
