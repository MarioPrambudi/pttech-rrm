// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package com.djavafactory.pttech.rrm.client.managed.ui;

import com.djavafactory.pttech.rrm.client.managed.request.ReloadRequestProxy;
import com.djavafactory.pttech.rrm.client.scaffold.place.AbstractProxyListView;
import com.google.gwt.core.client.GWT;
import com.google.gwt.i18n.client.DateTimeFormat;
import com.google.gwt.text.client.DateTimeFormatRenderer;
import com.google.gwt.text.shared.AbstractRenderer;
import com.google.gwt.text.shared.Renderer;
import com.google.gwt.uibinder.client.UiBinder;
import com.google.gwt.uibinder.client.UiField;
import com.google.gwt.user.cellview.client.CellTable;
import com.google.gwt.user.cellview.client.HasKeyboardSelectionPolicy.KeyboardSelectionPolicy;
import com.google.gwt.user.cellview.client.TextColumn;
import com.google.gwt.user.client.ui.Button;
import com.google.gwt.user.client.ui.HTMLPanel;
import java.util.HashSet;
import java.util.Set;

public abstract class ReloadRequestListView_Roo_Gwt extends AbstractProxyListView<ReloadRequestProxy> {

    @UiField
    CellTable<ReloadRequestProxy> table;

    protected Set<String> paths = new HashSet<String>();

    public void init() {
        paths.add("id");
        table.addColumn(new TextColumn<ReloadRequestProxy>() {

            Renderer<java.lang.Long> renderer = new AbstractRenderer<java.lang.Long>() {

                public String render(java.lang.Long obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(ReloadRequestProxy object) {
                return renderer.render(object.getId());
            }
        }, "Id");
        paths.add("version");
        table.addColumn(new TextColumn<ReloadRequestProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(ReloadRequestProxy object) {
                return renderer.render(object.getVersion());
            }
        }, "Version");
        paths.add("transId");
        table.addColumn(new TextColumn<ReloadRequestProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(ReloadRequestProxy object) {
                return renderer.render(object.getTransId());
            }
        }, "Trans Id");
        paths.add("status");
        table.addColumn(new TextColumn<ReloadRequestProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(ReloadRequestProxy object) {
                return renderer.render(object.getStatus());
            }
        }, "Status");
        paths.add("mfgNumber");
        table.addColumn(new TextColumn<ReloadRequestProxy>() {

            Renderer<java.lang.Long> renderer = new AbstractRenderer<java.lang.Long>() {

                public String render(java.lang.Long obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(ReloadRequestProxy object) {
                return renderer.render(object.getMfgNumber());
            }
        }, "Mfg Number");
        paths.add("reloadAmount");
        table.addColumn(new TextColumn<ReloadRequestProxy>() {

            Renderer<java.math.BigDecimal> renderer = new AbstractRenderer<java.math.BigDecimal>() {

                public String render(java.math.BigDecimal obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(ReloadRequestProxy object) {
                return renderer.render(object.getReloadAmount());
            }
        }, "Reload Amount");
        paths.add("serviceProviderId");
        table.addColumn(new TextColumn<ReloadRequestProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(ReloadRequestProxy object) {
                return renderer.render(object.getServiceProviderId());
            }
        }, "Service Provider Id");
        paths.add("transCode");
        table.addColumn(new TextColumn<ReloadRequestProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(ReloadRequestProxy object) {
                return renderer.render(object.getTransCode());
            }
        }, "Trans Code");
        paths.add("requestedTime");
        table.addColumn(new TextColumn<ReloadRequestProxy>() {

            Renderer<java.util.Date> renderer = new DateTimeFormatRenderer(DateTimeFormat.getFormat(DateTimeFormat.PredefinedFormat.DATE_SHORT));

            @Override
            public String getValue(ReloadRequestProxy object) {
                return renderer.render(object.getRequestedTime());
            }
        }, "Requested Time");
        paths.add("tngKey");
        table.addColumn(new TextColumn<ReloadRequestProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(ReloadRequestProxy object) {
                return renderer.render(object.getTngKey());
            }
        }, "Tng Key");
    }
}
