// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.djavafactory.pttech.rrm.domain;

import com.djavafactory.pttech.rrm.domain.Acquirer;
import java.util.Date;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Acquirer_Roo_Finder {
    
    public static TypedQuery<Acquirer> Acquirer.findAcquirersByCreatedTimeBetween(Date minCreatedTime, Date maxCreatedTime) {
        if (minCreatedTime == null) throw new IllegalArgumentException("The minCreatedTime argument is required");
        if (maxCreatedTime == null) throw new IllegalArgumentException("The maxCreatedTime argument is required");
        EntityManager em = Acquirer.entityManager();
        TypedQuery<Acquirer> q = em.createQuery("SELECT Acquirer FROM Acquirer AS acquirer WHERE acquirer.createdTime BETWEEN :minCreatedTime AND :maxCreatedTime", Acquirer.class);
        q.setParameter("minCreatedTime", minCreatedTime);
        q.setParameter("maxCreatedTime", maxCreatedTime);
        return q;
    }
    
}
