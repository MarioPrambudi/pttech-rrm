// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.djavafactory.pttech.rrm.domain;

import com.djavafactory.pttech.rrm.domain.Terminal;
import java.lang.String;
import java.util.Date;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Terminal_Roo_Finder {
    
    public static TypedQuery<Terminal> Terminal.findTerminalsByTerminalIdLikeOrCreatedTimeBetween(String terminalId, Date minCreatedTime, Date maxCreatedTime) {
        if (terminalId == null || terminalId.length() == 0) throw new IllegalArgumentException("The terminalId argument is required");
        terminalId = terminalId.replace('*', '%');
        if (terminalId.charAt(0) != '%') {
            terminalId = "%" + terminalId;
        }
        if (terminalId.charAt(terminalId.length() - 1) != '%') {
            terminalId = terminalId + "%";
        }
        if (minCreatedTime == null) throw new IllegalArgumentException("The minCreatedTime argument is required");
        if (maxCreatedTime == null) throw new IllegalArgumentException("The maxCreatedTime argument is required");
        EntityManager em = Terminal.entityManager();
        TypedQuery<Terminal> q = em.createQuery("SELECT Terminal FROM Terminal AS terminal WHERE LOWER(terminal.terminalId) LIKE LOWER(:terminalId)  OR terminal.createdTime BETWEEN :minCreatedTime AND :maxCreatedTime", Terminal.class);
        q.setParameter("terminalId", terminalId);
        q.setParameter("minCreatedTime", minCreatedTime);
        q.setParameter("maxCreatedTime", maxCreatedTime);
        return q;
    }
    
}
